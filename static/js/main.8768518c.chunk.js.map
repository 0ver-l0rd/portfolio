{"version":3,"sources":["logo.svg","bigpepe.png","Endpoints/Jobs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","jobData","roomGroups","sequence","rooms","roomGroupId","roomCode","name","jobId","isShared","id","panels","loads","roomId","panelLocationId","moduleType","moduleDisplayName","loadNumber","fixtureQty","fixtureId","dtEquipmentId","connectionLV","connectionHV","keypadLocations","keypads","dtProductId","position","loadId","keypadLocationId","engProductId","button4text2","button4text","button3text2","button3text","button2text2","button2text","button1text2","button1text","jobType","jobEquipment","fixtures","wattage","partNumber","manufacturer","controlTypeLV","controlType","defaultWireGauge","defaultVoltage","defaultPricing","defaultPanelStyle","defaultPanelSize","defaultMeasurement","defaultKeypadFamily","defaultKeypadColor","created","accId","ContentBlock","styled","div","ContentHeader","jsonStyle","overflowY","maxHeight","border","borderRadius","CodeHeader","POST","style","color","PUT","DELETE","Jobs","props","padding","fontSize","lineHeight","data","AppGrid","Sidebar","Content","App","className","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8768518c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/bigpepe.cf67a8d0.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport JSONPretty from \"react-json-pretty\";\nimport \"react-json-pretty/themes/monikai.css\";\nconst jobData = {\n  roomGroups: [\n    {\n      sequence: 0,\n      rooms: [\n        {\n          sequence: 0,\n          roomGroupId: \"aBK180000000EArGAM\",\n          roomCode: null,\n          name: \"Room 1 API TEST\",\n          jobId: \"a8W180000004jv2EAA\",\n          isShared: false,\n          id: \"a8Z18000000TJCqEAO\"\n        },\n        {\n          sequence: 1,\n          roomGroupId: \"aBK180000000EArGAM\",\n          roomCode: null,\n          name: \"Equipment Room API\",\n          jobId: \"a8W180000004jv2EAA\",\n          isShared: true,\n          id: \"a8Z18000000TJCrEAO\"\n        }\n      ],\n      name: \"Main Floor\",\n      jobId: \"a8W180000004jv2EAA\",\n      id: \"aBK180000000EArGAM\"\n    }\n  ],\n  panels: [],\n  name: \"test defaults edited 2\",\n  loads: [\n    {\n      roomId: \"a8Z18000000TJCqEAO\",\n      panelLocationId: null,\n      name: \"Load 1 API\",\n      moduleType: null,\n      moduleDisplayName: null,\n      loadNumber: null,\n      jobId: \"a8W180000004jv2EAA\",\n      id: \"a8b180000009wm6AAA\",\n      fixtureQty: 4,\n      fixtureId: \"a8c180000002RtlAAE\",\n      dtEquipmentId: null,\n      connectionLV: \"BLE\",\n      connectionHV: \"Module\"\n    },\n    {\n      roomId: \"a8Z18000000TJCqEAO\",\n      panelLocationId: null,\n      name: \"Load 2 API\",\n      moduleType: null,\n      moduleDisplayName: null,\n      loadNumber: null,\n      jobId: \"a8W180000004jv2EAA\",\n      id: \"a8b180000009whkAAA\",\n      fixtureQty: null,\n      fixtureId: \"a8c180000002RtlAAE\",\n      dtEquipmentId: \"a8e180000001WY5AAM\",\n      connectionLV: \"BLE\",\n      connectionHV: null\n    }\n  ],\n  keypadLocations: [\n    {\n      roomId: \"a8Z18000000TJCqEAO\",\n      name: \"Bar Lights\",\n      keypads: [],\n      jobId: \"a8W180000004jv2EAA\",\n      id: \"a8d1800000014jFAAQ\",\n      dtProductId: \"aBC18000000076lGAA\"\n    },\n    {\n      roomId: \"a8Z18000000TJCqEAO\",\n      name: \"Keypad 2 test EDITED\",\n      keypads: [\n        {\n          position: 3,\n          name: \"Keypad 2 test EDITED\",\n          loadId: null,\n          keypadLocationId: \"a8d1800000014jAAAQ\",\n          id: \"a8k180000001n3FAAQ\",\n          engProductId: null,\n          dtProductId: \"aBC180000000793GAA\",\n          dtEquipmentId: null,\n          button4text2: null,\n          button4text: null,\n          button3text2: null,\n          button3text: null,\n          button2text2: null,\n          button2text: null,\n          button1text2: null,\n          button1text: null\n        },\n        {\n          position: 1,\n          name: \"Keypad 1 test\",\n          loadId: null,\n          keypadLocationId: \"a8d1800000014jAAAQ\",\n          id: \"a8k180000001n30AAA\",\n          engProductId: null,\n          dtProductId: \"aBC180000000793GAA\",\n          dtEquipmentId: \"a8e180000001WY0AAM\",\n          button4text2: null,\n          button4text: null,\n          button3text2: null,\n          button3text: null,\n          button2text2: null,\n          button2text: null,\n          button1text2: null,\n          button1text: null\n        }\n      ],\n      jobId: \"a8W180000004jv2EAA\",\n      id: \"a8d1800000014jAAAQ\",\n      dtProductId: \"aBC180000000793GAA\"\n    }\n  ],\n  jobType: null,\n  jobEquipment: [],\n  id: \"a8W180000004jv2EAA\",\n  fixtures: [\n    {\n      wattage: 120,\n      partNumber: \"234\",\n      name: \"Nermal's Fixture\",\n      manufacturer: \"USAI\",\n      jobId: \"a8W180000004jv2EAA\",\n      id: \"a8c180000002S4ZAAU\",\n      controlTypeLV: \"BLE\",\n      controlType: \"Forward Phase\"\n    },\n    {\n      wattage: 120,\n      partNumber: \"234\",\n      name: \"D5 Test\",\n      manufacturer: \"USAI\",\n      jobId: \"a8W180000004jv2EAA\",\n      id: \"a8c180000002RtlAAE\",\n      controlTypeLV: \"BLE\",\n      controlType: \"Forward Phase\"\n    }\n  ],\n  defaultWireGauge: \"14\",\n  defaultVoltage: \"120v\",\n  defaultPricing: \"MSRP\",\n  defaultPanelStyle: \"QO\",\n  defaultPanelSize: \"42\",\n  defaultMeasurement: \"Imperial\",\n  defaultKeypadFamily: \"Metropolitan\",\n  defaultKeypadColor: \"Black\",\n  created: 1587138531000,\n  accId: \"0017000000Nk6YKAAZ\"\n};\nconst ContentBlock = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n`;\n\nconst ContentHeader = styled.div`\n  font-size: 16px;\n  margin-bottom: 20px;\n  background-color: #283430;\n  padding: 20px;\n`;\n\nconst jsonStyle = {\n  overflowY: \"scroll\",\n  maxHeight: 500,\n  border: \"1px solid #000\",\n  borderRadius: 8\n};\n\nconst CodeHeader = styled.div`\n  background-color: #2c384e;\n  padding: 10px;\n`;\n\nconst POST = () => {\n  return <span style={{ color: \"green\" }}>POST</span>;\n};\nconst GET = () => {\n  return <span style={{ color: \"blue\" }}>GET</span>;\n};\nconst PUT = () => {\n  return <span style={{ color: \"yellow\" }}>PUT</span>;\n};\nconst DELETE = () => {\n  return <span style={{ color: \"red\" }}>DELETE</span>;\n};\n\nconst Jobs = props => {\n  return (\n    <div>\n      <ContentHeader>JOBS</ContentHeader>\n      <ContentBlock>\n        <div style={{ padding: 10 }}>\n          Attributes\n          <br />\n          <hr />\n          <br />\n          <b>defaultWireGauge</b>, integer\n          <br />\n          Can be 12 or 14\n          <br />\n          <br />\n          <b>defaultVoltage</b>, string\n          <br />\n          120v or 240v\n          <br />\n          <br />\n          <b>defaultPricing</b>, string\n          <br />\n          \"MSRP\", \"My Pricing\", or \"None\"\n          <br />\n          <br />\n          <b>defaultKeypadFamily</b>, string\n          <br />\n          \"Metropolitan\", \"Echo\", or \"Ascend\"\n          <br />\n          <br />\n          <b>defaultKeypadColor</b>, string\n          <br />\n          \"Black\", \"Snow White\", or \"Almond\"\n          <br />\n          <br />\n          <b>defaultPanelStyle</b>, string\n          <br />\n          \"Homeline\" or \"QO\"\n          <br />\n          <br />\n          <b>defaultPanelSize</b>, integer\n          <br />\n          42, 30, 24, 16, 12, 8, 6\n          <br />\n          <br />\n        </div>\n        <div>\n          <div style={jsonStyle}>\n            <CodeHeader>ENDPOINTS</CodeHeader>\n            <div style={{ padding: 10, fontSize: 12, lineHeight: \"1.8\" }}>\n              <POST /> /jobs\n              <br />\n              <POST /> /jobs/:jobId\n              <br />\n              <PUT /> /jobs/:jobId\n              <br />\n              <DELETE /> /jobs/:jobId\n              <br />\n            </div>\n          </div>\n          <br />\n          <div style={jsonStyle}>\n            <CodeHeader>Job Object</CodeHeader>\n            <JSONPretty id=\"json-job\" data={jobData}></JSONPretty>\n          </div>\n        </div>\n      </ContentBlock>\n    </div>\n  );\n};\nexport default Jobs;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport pepe from \"./bigpepe.png\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Jobs from \"./Endpoints/Jobs\";\n\nconst AppGrid = styled.div`\n  display: grid;\n  grid-template-columns: 20% 80%;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Sidebar = styled.div`\n  border-right: 1px solid #fafaf9;\n  padding: 20px;\n  height: 100%;\n`;\n\nconst Content = styled.div`\n  padding: 40px;\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppGrid>\n          <Sidebar>\n            <Link className=\"nav-link\" to=\"/jobs\">\n              Jobs\n            </Link>\n            <Link className=\"nav-link\" to=\"/rooms\">\n              Rooms\n            </Link>\n            <Link className=\"nav-link\" to=\"/fixtures\">\n              Fixtures\n            </Link>\n            <Link className=\"nav-link\" to=\"/loads\">\n              Loads\n            </Link>\n            <Link className=\"nav-link\" to=\"/keypads\">\n              Keypads\n            </Link>\n            <Link className=\"nav-link\" to=\"/equipment\">\n              Equipment\n            </Link>\n            <Link className=\"nav-link\" to=\"/products\">\n              Products\n            </Link>\n          </Sidebar>\n          <Content>\n            <Switch>\n              <Route path=\"/jobs\">\n                <Jobs />\n              </Route>\n            </Switch>\n          </Content>\n        </AppGrid>\n      </Router>\n\n      {/* <header className=\"App-header\">\n        <img src={pepe} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Damn grl u fine\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}